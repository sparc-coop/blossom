@using Sparc.Blossom.Shared
@using Sparc.Blossom.Realtime

@if (UserAvatar != null)
{
    <div class="account-btn" @onclick="OpenUserProfile">
        <AuraAvatar Avatar="UserAvatar" />
    </div>

    <div>
        <BlossomDialog @ref=Dialog>
            <header>
                <div>
                    <AuraAvatar Avatar="UserAvatar" />
                    <h3>@(UserAvatar.PasskeyName ?? "Your Profile")</h3>
                </div>
                <button type="button" aria-label="Close" @onclick="@CloseUserProfile"><XIcon /></button>
            </header>
            <section>
                <div class="column">
                    <section class="profile-customization">
                        <AvatarEditor UserAvatar="UserAvatar" />
                    </section>
                </div>

                <div class="column">
                    <section class="language-selector">
                        <header>
                            <h4>Language</h4>
                        </header>
                        <Sparc.Blossom.Content.LanguageSelector />
                        @if (ChildContent != null)
                        {
                            @ChildContent(UserAvatar)
                        }
                    </section>
                    <section class="login">
                        @if (UserAvatar.VerificationLevel == 0)
                        {
                            <LoginWithPasskey UserAvatar="UserAvatar" />
                        }
                        else if (UserAvatar.VerificationLevel == 1)
                        {
                            <LoginWithEmail UserAvatar="UserAvatar" />
                        }
                        else
                        {
                            <p>You are logged in and your data is protected.</p>
                            <button @onclick=Logout>
                                Forget Me on this Device
                            </button>
                        }
                    </section>
                </div>
            </section>
        </BlossomDialog>
    </div>
}

@inject ISparcAura Aura
@inject IJSRuntime Js
@inject NavigationManager Nav
@inject SparcEvents Events
@code {
    [Parameter] public RenderFragment<BlossomAvatar>? ChildContent { get; set; }
    BlossomDialog Dialog = null!;

    public BlossomAvatar? UserAvatar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = await Aura.UserInfo();
        if (user != null)
            await SetAvatar(user.Avatar);

        Events.AvatarChanged += SetAvatar;
    }

    private Task SetAvatar(BlossomAvatar avatar)
    {
        UserAvatar = avatar;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async Task Logout()
    {
        var confirm = await Js.InvokeAsync<bool>("confirm", "Are you sure you want to log out?");
        if (!confirm)
            return;

        var user = await Aura.Logout();
        UserAvatar = user.Avatar;
        Nav.Refresh(true);
    }

    private async Task OpenUserProfile() => await Dialog.OpenModalAsync();

    private async Task CloseUserProfile() => await Dialog.CloseAsync();
}
