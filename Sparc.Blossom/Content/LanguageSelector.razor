@using System.Globalization
@using Microsoft.JSInterop
@using Sparc.Blossom.Authentication
@using Microsoft.AspNetCore.Components.Forms

<div class="language-select" translate="no">
    <InputSelect @bind-Value="SelectedLanguageId" @bind-Value:after="ChangeLanguage">
        @foreach (var language in Sparc.Blossom.Content.Language.All.OrderBy(x => x.NativeName))
        {
            <option value="@language.Id">
                @language.NativeName @(language.NativeName == language.DisplayName ? "" : $"({language.DisplayName})")
            </option>
        }
    </InputSelect>
    <div class="language-select-progress-bar">
        <div class="progress-bar-value"></div>
    </div>
</div>

@inject ITovik Tovik
@inject ISparcAura Aura
@inject IJSRuntime Js
@code {
    [Parameter] public string? InitialLanguageId { get; set; }
    [Parameter] public EventCallback<Language> OnLanguageChanged { get; set; }
    [SupplyParameterFromQuery] public string? Lang { get; set; }
    public string SelectedLanguageId = "";
    public bool IsSpinning;

    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(SelectedLanguageId))
            SelectedLanguageId = Lang
                ?? InitialLanguageId
                ?? string.Empty;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        if (InitialLanguageId == null && string.IsNullOrWhiteSpace(SelectedLanguageId))
        {
            var tovikLanguage = await Js.InvokeAsync<string?>("eval", "localStorage.getItem('tovik-lang')")
                ?? await Js.InvokeAsync<string>("eval", "navigator.language");
            SelectedLanguageId = Language.Find(tovikLanguage)?.Id ?? "";
            StateHasChanged();
        }

        await ChangeLanguage();
    }

    public async Task SetLanguage(string id)
    {
        SelectedLanguageId = id;
        IsSpinning = false;
        await ChangeLanguage();
    }

    async Task ChangeLanguage()
    {
        var selectedLanguage = Sparc.Blossom.Content.Language.Find(SelectedLanguageId);
        if (OnLanguageChanged.HasDelegate)
        {
            await OnLanguageChanged.InvokeAsync(selectedLanguage);
        }
        else
        {
            await NotifyTovik();
        }
    }

    async Task NotifyTovik()
        => await Js.InvokeVoidAsync("eval", "document.dispatchEvent(new CustomEvent('tovik-user-language-changed', { detail: '" + SelectedLanguageId + "' }));");
}