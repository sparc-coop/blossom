@using System.Globalization
@using Microsoft.JSInterop
@using Sparc.Blossom.Authentication
@using Microsoft.AspNetCore.Components.Forms

<div class="language-select" translate="no">
    @if (Languages.Any())
    {
        <InputSelect @bind-Value="SelectedLanguageId" @bind-Value:after="ChangeLanguage" >
            @foreach (var language in Languages.OrderBy(x => x.NativeName))
            {
                <option value="@language.Id">
                    @language.NativeName @(language.NativeName == language.DisplayName ? "" : $"({language.DisplayName})")
                </option>
            }
        </InputSelect>
    }
    <div class="language-select-progress-bar">
        <div class="progress-bar-value"></div>
    </div>
</div>

@inject ITovik Tovik
@inject ISparcAura Aura 
@inject IJSRuntime Js
@code {
    [Parameter] public BlossomAvatar? Avatar { get; set; }
    [Parameter] public EventCallback<Language> OnLanguageChanged { get; set; }
    IEnumerable<Sparc.Blossom.Content.Language> Languages { get; set; } = [];
    [SupplyParameterFromQuery] public string? Lang { get; set; }
    string SelectedLanguageId = "";

    protected override async Task OnInitializedAsync()
    {
        Languages = await Tovik.GetLanguages();
        SelectedLanguageId = Lang
                ?? Avatar?.Language?.Id
                ?? Languages.FirstOrDefault(l => l.Id == CultureInfo.CurrentUICulture.TwoLetterISOLanguageName)?.Id
                ?? string.Empty;

        if (!OnLanguageChanged.HasDelegate)
            await NotifyTovik();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Avatar?.Language != null && Avatar.Language.Id != SelectedLanguageId)
            SelectedLanguageId = Avatar.Language.Id;
    }

    async Task ChangeLanguage()
    {
        var selectedLanguage = Languages.FirstOrDefault(l => l.Id == SelectedLanguageId);
        if (OnLanguageChanged.HasDelegate)
        {
            await OnLanguageChanged.InvokeAsync(selectedLanguage);
        }
        else if (Avatar != null)
        {
            Avatar.Language = selectedLanguage;
            await Aura.UpdateUserInfo(Avatar);
            await NotifyTovik();
        }
    }

    async Task NotifyTovik()
        => await Js.InvokeVoidAsync("eval", "document.dispatchEvent(new CustomEvent('tovik-user-language-changed', { detail: '" + SelectedLanguageId + "' }));");
}