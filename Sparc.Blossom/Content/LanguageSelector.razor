@using System.Net.Http.Json
@using System.Globalization
@using Sparc.Blossom.Authentication
@using Sparc.Engine

<div class="language-selector">
    <button @onclick=ToggleLanguageList>
        <Sparc.Blossom.Content.Icons.Language />
        @SelectedLanguage?.DisplayName
        <Sparc.Blossom.Content.Icons.Expand IsExpanded="ShowLanguageSettings" />
    </button>

    @if (ShowLanguageSettings && Languages != null)
    {
        <ul>
            @foreach (var language in Languages)
            {
                <li>
@*                     <button @onclick=@(() => ChangeLanguage(language))>
                        @language.DisplayName

                        @if (language.DisplayName != language.NativeName)
                        {
                            <aside>@language.NativeName</aside>
                        }

                        @if (SelectedLanguage?.Id == language.Id)
                        {
                            <div class="right">
                                <Check />
                            </div>
                        }
                    </button> *@
                </li>
            }
        </ul>
    }
</div>

@inject ISparcEngine Engine
@inject IBlossomAuthenticator Auth

@code {
    Language? SelectedLanguage;
    IEnumerable<Language>? Languages { get; set; }

    bool ShowLanguageSettings = false;

    protected override async Task OnInitializedAsync()
    {
        Languages = await Engine.GetLanguages();
        SelectedLanguage = Auth.User?.PrimaryLanguage
            ?? Languages.FirstOrDefault(x => x.Matches(CultureInfo.CurrentUICulture.TwoLetterISOLanguageName));
    }

    void ToggleLanguageList()
    {
        ShowLanguageSettings = !ShowLanguageSettings;
    }

    // async Task ChangeLanguage(Language language)
    // {
    //     await LanguageChanged.InvokeAsync(language);
    //     ToggleLanguageSettings();
    // }
}