<header>
    <h4>Save Your Profile</h4>
    <p>
        Save your profile securely with a passkey —- a modern, password-free method that stores your profile safely on your device.
    </p>
    <p>
        Your passkey stays private and is never shared with us or any third parties.
    </p>
</header>

@if (Message != null)
{
    <div class="error-message">
        @Message
    </div>
}
<div>
    <button type="button" class="primary-btn" @onclick="Register" disabled="@IsLoggingIn">
        @(IsLoggingIn ? "Saving..." : "Save")
    </button>

    <aside>
        Already have a profile for this app?
        <button @onclick=Login disabled="@IsLoggingIn">
            Load My Profile
        </button>
    </aside>
</div>


@inject PasskeyAuthenticator Auth
@inject NavigationManager Nav
@code
{
    [Parameter] public required BlossomAvatar UserAvatar { get; set; }
    bool HasAtLeastOnePasskey => UserAvatar.VerificationLevel > 0;
    bool IsLoggingIn;
    string? Message;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await Auth.InitializeAsync();
    }

    async Task Register() => await StartLogin(true);
    async Task Login() => await StartLogin();

    async Task StartLogin(bool isNew = false)
    {
        IsLoggingIn = true;
        Message = null;

        StateHasChanged();

        try
        {
            if (isNew)
                await Auth.RegisterAsync();
            else
                await Auth.LoginAsync();
        }
        catch (Exception e)
        {
            IsLoggingIn = false;
            Message = e.Message;
        }
    }
}