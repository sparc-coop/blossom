<section class="login">
    <header>
        <h4>Create a Passkey</h4>
        <p>
            Passkeys are a secure, modern alternative to passwords that stay safely stored on your device, and are never shared or sent online.</p>
            <p>Creating a passkey is optional, but we recommend it to better protect your data and enable cross-device sync.
        </p>
    </header>

    @if (Message != null)
    {
        <div class="error-message">
            @Message
        </div>
    }
    <div>
        <button type="button" class="primary-btn" @onclick="Register" disabled="@IsLoggingIn">
            @(IsLoggingIn ? "Waiting for your passkey..." : "Create My Passkey")
        </button>

        <aside>
            Already have a passkey for this app?
            <button @onclick=Login disabled="@IsLoggingIn">
                Use My Existing Passkey
            </button>
        </aside>
    </div>
</section>

@inject PasskeyAuthenticator Auth
@inject NavigationManager Nav
@code
{
    [Parameter] public required BlossomAvatar UserAvatar { get; set; }
    bool HasAtLeastOnePasskey => UserAvatar.VerificationLevel > 0;
    bool IsLoggingIn;
    string? Message;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await Auth.InitializeAsync();
    }

    async Task Register() => await StartLogin(true);
    async Task Login() => await StartLogin();

    async Task StartLogin(bool isNew = false)
    {
        IsLoggingIn = true;
        Message = null;

        StateHasChanged();

        try
        {
            if (isNew)
                await Auth.RegisterAsync();
            else
                await Auth.LoginAsync();
        }
        catch (Exception e)
        {
            IsLoggingIn = false;
            Message = e.Message;
        }
    }
}