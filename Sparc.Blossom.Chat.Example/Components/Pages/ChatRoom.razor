@using Sparc.Core.Chat

<h3>Chat</h3>

<div class="chat-container">
    <div class="messages" style="height:300px; overflow-y:auto; border:1px solid #ccc; padding:10px; margin-bottom:10px;">
        @if (messages.Any())
        {
            @foreach (var msg in messages)
            {
                <div class="message" style="margin-bottom:5px;">@msg.Sender: @msg.Body</div>
            }
        }

    </div>
    <input @bind="currentMessage.Body" placeholder="Type a message..." style="width:80%; padding:5px;" />
    <button @onclick="SendMessage" style="padding:5px 10px; margin-left:5px;">Send</button>
</div>

@code {
    [Parameter] public string RoomId { get; set; }
    private List<MessageEvent> messages = new List<MessageEvent>();
    private MessageEvent currentMessage = new MessageEvent();

    protected async override Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(RoomId))
        {
            throw new ArgumentException("RoomId must be provided", nameof(RoomId));
        }

        await GetMessagesAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(RoomId))
            await GetMessagesAsync();
    }

    private async Task GetMessagesAsync()
    {
        messages = await Chat.GetMessagesAsync(RoomId);
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(currentMessage.Body))
        {
            currentMessage.RoomId = RoomId;
            currentMessage.Sender = "System";

            await Chat.SendMessageAsync(currentMessage);
            
            currentMessage = new MessageEvent();
            await GetMessagesAsync();
        }
    }
}

